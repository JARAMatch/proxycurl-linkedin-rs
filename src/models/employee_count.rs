/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EmployeeCount {
    #[serde(rename = "total_employee", skip_serializing_if = "Option::is_none")]
    pub total_employee: Option<i32>,
    /// The scraped value of employee count of this company from it's LinkedIn profile. This value does not respect `employement_status` parameter. It will always return the curent employee count of this company from LinkedIn.
    #[serde(
        rename = "linkedin_employee_count",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub linkedin_employee_count: Option<Option<i32>>,
    /// The total number of employees found in LinkDB for this company. This value is limited by pre-crawled LinkedIn profiles stored in [LinkDB](https://nubela.co/proxycurl/linkdb)
    #[serde(
        rename = "linkdb_employee_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub linkdb_employee_count: Option<i32>,
    #[serde(rename = "regression_notice", skip_serializing_if = "Option::is_none")]
    pub regression_notice: Option<String>,
}

impl EmployeeCount {
    pub fn new() -> EmployeeCount {
        EmployeeCount {
            total_employee: None,
            linkedin_employee_count: None,
            linkdb_employee_count: None,
            regression_notice: None,
        }
    }
}
