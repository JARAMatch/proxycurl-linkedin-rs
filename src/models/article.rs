/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Article {
    #[serde(
        rename = "title",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub title: Option<Option<String>>,
    #[serde(
        rename = "link",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub link: Option<Option<String>>,
    #[serde(rename = "published_date", skip_serializing_if = "Option::is_none")]
    pub published_date: Option<Box<crate::models::Date>>,
    #[serde(
        rename = "author",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub author: Option<Option<String>>,
    #[serde(
        rename = "image_url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub image_url: Option<Option<String>>,
}

impl Article {
    pub fn new() -> Article {
        Article {
            title: None,
            link: None,
            published_date: None,
            author: None,
            image_url: None,
        }
    }
}
