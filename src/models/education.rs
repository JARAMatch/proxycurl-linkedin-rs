/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Education {
    #[serde(rename = "starts_at", skip_serializing_if = "Option::is_none")]
    pub starts_at: Option<Box<crate::models::Date>>,
    #[serde(rename = "ends_at", skip_serializing_if = "Option::is_none")]
    pub ends_at: Option<Box<crate::models::Date>>,
    #[serde(
        rename = "field_of_study",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub field_of_study: Option<Option<String>>,
    #[serde(
        rename = "degree_name",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub degree_name: Option<Option<String>>,
    #[serde(
        rename = "school",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub school: Option<Option<String>>,
    #[serde(
        rename = "school_linkedin_profile_url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub school_linkedin_profile_url: Option<Option<String>>,
    #[serde(
        rename = "description",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub description: Option<Option<String>>,
    #[serde(
        rename = "logo_url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub logo_url: Option<Option<String>>,
    #[serde(rename = "grade", skip_serializing_if = "Option::is_none")]
    pub grade: Option<String>,
    #[serde(
        rename = "activities_and_societies",
        skip_serializing_if = "Option::is_none"
    )]
    pub activities_and_societies: Option<String>,
}

impl Education {
    pub fn new() -> Education {
        Education {
            starts_at: None,
            ends_at: None,
            field_of_study: None,
            degree_name: None,
            school: None,
            school_linkedin_profile_url: None,
            description: None,
            logo_url: None,
            grade: None,
            activities_and_societies: None,
        }
    }
}
