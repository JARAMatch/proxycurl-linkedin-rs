/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CompanyType {
    #[serde(rename = "EDUCATIONAL")]
    Educational,
    #[serde(rename = "GOVERNMENT_AGENCY")]
    GovernmentAgency,
    #[serde(rename = "NON_PROFIT")]
    NonProfit,
    #[serde(rename = "PARTNERSHIP")]
    Partnership,
    #[serde(rename = "PRIVATELY_HELD")]
    PrivatelyHeld,
    #[serde(rename = "PUBLIC_COMPANY")]
    PublicCompany,
    #[serde(rename = "SELF_EMPLOYED")]
    SelfEmployed,
    #[serde(rename = "SELF_OWNED")]
    SelfOwned,
}

impl ToString for CompanyType {
    fn to_string(&self) -> String {
        match self {
            Self::Educational => String::from("EDUCATIONAL"),
            Self::GovernmentAgency => String::from("GOVERNMENT_AGENCY"),
            Self::NonProfit => String::from("NON_PROFIT"),
            Self::Partnership => String::from("PARTNERSHIP"),
            Self::PrivatelyHeld => String::from("PRIVATELY_HELD"),
            Self::PublicCompany => String::from("PUBLIC_COMPANY"),
            Self::SelfEmployed => String::from("SELF_EMPLOYED"),
            Self::SelfOwned => String::from("SELF_OWNED"),
        }
    }
}

impl Default for CompanyType {
    fn default() -> CompanyType {
        Self::Educational
    }
}
