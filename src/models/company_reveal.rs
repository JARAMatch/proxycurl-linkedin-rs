/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CompanyReveal {
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<Box<crate::models::OrganizationBase>>,
    /// LinkedIn Profile URL of the Company returned.
    #[serde(
        rename = "company_linkedin_profile_url",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub company_linkedin_profile_url: Option<Option<String>>,
    /// A list of personal contact numbers.
    #[serde(
        rename = "role_contact_number",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub role_contact_number: Option<Option<Vec<String>>>,
    /// A list of personal email addresses.
    #[serde(
        rename = "role_personal_email",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub role_personal_email: Option<Option<Vec<String>>>,
    #[serde(rename = "role_profile", skip_serializing_if = "Option::is_none")]
    pub role_profile: Option<Box<crate::models::Person>>,
}

impl CompanyReveal {
    pub fn new() -> CompanyReveal {
        CompanyReveal {
            company: None,
            company_linkedin_profile_url: None,
            role_contact_number: None,
            role_personal_email: None,
            role_profile: None,
        }
    }
}
