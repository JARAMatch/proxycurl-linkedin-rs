/*
 * Proxycurl API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Funding {
    /// Type of funding
    #[serde(
        rename = "funding_type",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub funding_type: Option<Option<String>>,
    /// Amount of money raised
    #[serde(
        rename = "money_raised",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub money_raised: Option<Option<i32>>,
    #[serde(rename = "announced_date", skip_serializing_if = "Option::is_none")]
    pub announced_date: Option<Box<crate::models::Date>>,
    /// Number of investors in this round
    #[serde(
        rename = "number_of_investor",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub number_of_investor: Option<Option<i32>>,
    #[serde(
        rename = "investor_list",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub investor_list: Option<Option<Vec<crate::models::Investor>>>,
}

impl Funding {
    pub fn new() -> Funding {
        Funding {
            funding_type: None,
            money_raised: None,
            announced_date: None,
            number_of_investor: None,
            investor_list: None,
        }
    }
}
